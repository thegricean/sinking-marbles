// fully bayesian prior elicitaiton

// to run: webppl priors.wppl --require-js ./utils

// define states 0-15
var states = utils.sequence(0,15,1)

// each state has a uniform(0,1) prior
var unnormedPriorInTheSky = repeat(16, function(){return sample(uniformERP,[0,1])})

var priorInTheSky = _.object(
	_.zip(states, utils.normalize(unnormedPriorInTheSky))
	)

// read in data
var ntData = utils.readinNumberTask()
var nSubj_nt = ntData.length-1

// each subject has some "softmax" parameter
// uniformly distributed between 0 and +Infinity (or 100)

var subjectAlphas = _.object(map(function(subj){
	return ['s'+subj, sample(uniformERP,[0,100])]
}, utils.sequence(0,nSubj_nt,1)))


var numberTask = function(alpha){
	Enumerate(function(){
	 	var distoredDistribution = utils.raiseToPower(_.values(priorInTheSky),alpha)
	 	return discrete(distoredDistribution)
	})
}

var binnedHistTask = function(offset, scale){
	Enumerate(function(){
		var logitP = utils.logitDistribution(_.values(priorInTheSky))
		var distortedP = utils.logisticDistribution(logitP, offset, scale)
		return distortedP
	})
}

// var inferPriorInTheSky = function(){


// }

