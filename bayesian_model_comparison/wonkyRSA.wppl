
var numObjs = 15

var worldPrior = function() {
  var marbles = randomInteger(numObjs+1) //15 marbles... 0-15 can sink
  return marbles
}

var utterancePrior = function() {
  var utterances = ["Some",
                    "All",
                    "None"
                    // "mu"
                    ]
 return uniformDraw(utterances)
  // return utterances[discrete([1,1,1,10])]
}

var meaning = function(utt,world) {
  return utt=="Some"? world>0 :
  utt=="All"? world==numObjs :
  utt=="None"? world==0 :
  utt=="mu"? true :
  true
}

var empiricalPriors = wonkyutils.readPriors()

var literalListener = cache(function(utterance, prior) {
                            Enumerate(function(){
                                      var world = discrete(prior)
                                      var m = meaning(utterance, world)
                                      factor(m?0:-Infinity)
                                      return world
                                      })
                            })

var speaker = cache(function(world, prior) {
                    Enumerate(function(){
                              var utterance = utterancePrior()
                              var L = literalListener(utterance, prior)
                              factor(L.score([],world))
                              return utterance
                              })
                    })

var listener = function(utterance,wonkinessPrior,speakerOptimality,item,query) {
                      Enumerate(function(){
                                var wonky = flip(wonkinessPrior)
                                var prior = wonky ? 
                                  // [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]:
                                      wonkyutils.fillArray(1,16) :
                                      // empiricalPriors[item]
                                      // [ 0.8,
                                      //     0.1,
                                      //     0.1013102,
                                      //     0.0160822,
                                      //     0.0076818,
                                      //     0.0359784,
                                      //     0.0054297,
                                      //     0.0008195,
                                      //     0.0001238,
                                      //     0.0000188,
                                      //     0.0000029,
                                      //     5e-7,
                                      //     2e-7,
                                      //     1e-7,
                                      //     1e-7,
                                      //     1e-7 ]
                                    // [.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,10]
                                    empiricalPriors[item]
                                var world = discrete(prior)
                                var S = speaker(world, prior)
                                factor(speakerOptimality*S.score([],utterance))
                                var queryStatement = {"world":world,
                                                      "wonky":wonky}
                                return queryStatement[query]
//                                return map(function(s){return [s,Math.exp(S.score([],s))]},S.support())
//                                return sample(S)
                                })
                    }


// listener("Some", 0, 3, 'blah', 'world')
